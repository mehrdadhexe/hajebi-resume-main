{"version":3,"sources":["logo.svg","components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/NavigationSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesSection","src_components_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","console","log","name","AboutSection","sections","items","content","SkillCard","skill","image","eachSkill","src_components_SkillCard","NavigationSection","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","theme","changeColor","bind","assertThisInitialized","i","themes","length","setState","document","body","backgroundColor","background_color","color","_this2","App","lib_default","followMouse","snowColor","src_components_NavigationSection","src_sections_TitlesSection","src_sections_AboutSection","sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86b33422.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './Fullpage.css'\n\nclass Fullpage extends Component {\n    render() {\n        const { children } = this.props\n        return (\n            <div className={`fullpage ${this.props.className || ''}`}>\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Fullpage","import React, {Component} from \"react\";\n\nconst DownIcon = (props) => {\n    return (\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-34px\",\n          transform: \"translateY(-100px)\"\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"30px\"\n          }}\n        >\n          <img className=\"DownIcon\" src={props.icon} />\n        </div>\n      </div>\n    )\n}\n\nexport default DownIcon","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./TitlesSection.css\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\n\nclass TitlesSection extends Component {\n \n\n  render() {\n    return (\n      <div>\n        <Fullpage className=\"first\">\n          <h1\n            className=\"title\"\n           \n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2>{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map(key => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={0}\n          duration={500}\n          delay={0}\n        >\n          <DownIcon\n            icon={data.icons.down}\n            onClick={() => console.log(\"im working\")}\n          />\n        </Link>\n        <Element name=\"about\" className=\"element\" />\n      </div>\n    );\n  }\n}\n\nexport default TitlesSection;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport './AboutSection.css'\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Fullpage className=\"second\">\n        <h3>{data.sections[0].title}</h3>\n        <div>\n          {data.sections[0].items.map(p => {\n            return <p>{p.content}</p>;\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport { Link, Element } from \"react-scroll\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from '../components/SkillCard';\n\nimport \"./SkillSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Element name=\"Skills\" className=\"element\">\n      <Fullpage className=\"third\">\n        <h3>{data.sections[1].title}</h3>\n        <div className=\"cards-wrapper\">\n          {data.sections[1].items.map(eachSkill => {\n            return (\n              <SkillCard skill={eachSkill}/>\n            );\n          })}\n        </div>\n      </Fullpage>\n      </Element>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\nimport './NavigationSection.css'\r\n\r\nclass NavigationSection extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n     theme:0\r\n    };\r\n    this.changeColor = this.changeColor.bind(this);\r\n  }\r\n\r\n  changeColor() {\r\n\r\n    let i =this.state.theme+1\r\n    let count =data.themes.length;\r\n    if(i===count)\r\n      i=0\r\n  \r\n    this.setState({\r\n\r\n      theme:i \r\n      \r\n     });\r\n\r\n    \r\n    document.body.style.backgroundColor = data.themes[this.state.theme].background_color\r\n    document.body.style.color=data.themes[this.state.theme].color\r\n    \r\n  }\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\" >\r\n\r\n\r\n        <div className=\"chTheme\">\r\n\r\n          <img onClick={()=>{\r\n            \r\n            this.changeColor();\r\n\r\n          }} src={data.icons.theme} /> \r\n\r\n        </div>\r\n\r\n\r\n        <ul>\r\n\r\n                  <Link\r\n                  activeClass=\"active\"\r\n                  to=\"about\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={0}\r\n                  duration={500}\r\n                  delay={0}\r\n                        >\r\n                <li>About</li>\r\n                </Link>\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"Skills\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={0}\r\n                  duration={500}\r\n                  delay={0}\r\n                >\r\n                <li>Skill</li>\r\n                </Link>\r\n        \r\n       \r\n      </ul>\r\n    \r\n      \r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationSection;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport NavigationSection from \"./components/NavigationSection\";\n\nimport SnowStorm from 'react-snowstorm';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <SnowStorm followMouse={true} snowColor ='#3498db'/>\n      \n      <NavigationSection />\n      <TitlesSection />\n      <AboutSection />\n      <SkillSection />\n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}